language: cpp
env:
  global:
   # The next declaration is the encrypted COVERITY_SCAN_TOKEN, created
   #   via the "travis encrypt" command using the project repo's public key
   - secure: "MxxolEXPuFJ38hk7lhGqunKwsc8CIMUy8vCoswNDyFvuBm5FEcEaNe/SIjqli8fCXTrWh3LoCIyulezCoFkysjfSSmLFCngoAEvIWTX1hS9rnh+z1g7vUJiIcj1jiYFV+wk5C44IuMDfOEX6FFh4vRiT/IkZsrXf5IbxD08vUW8="
before_install:
 - sudo add-apt-repository -y "deb http://archive.ubuntu.com/ubuntu/ trusty main universe"
 - sudo apt-get update -qq
 - sudo apt-get install -qq gperf libasio-dev libboost-dev libc-ares-dev libdb++-dev libpopt-dev libssl-dev perl libmysqlclient-dev libpq-dev libfreeradius-client-dev libcppunit-dev autotools-dev libpcre3-dev libxerces-c-dev curl libcajun-dev python-cxx-dev libsipxtapi-dev libsrtp-dev
 - sudo add-apt-repository -y "deb http://http.debian.net/debian/ sid main"
 - sudo apt-get update -qq
 - sudo apt-get install -qq --force-yes libfreeradius-client-dev libcajun-dev libsipxtapi-dev
compiler:
  - gcc
  - clang
script:
  - ./build/travis/bootstrap
  - ./build/travis/configure
  - ./build/travis/build

# This is not enabled yet, the following issues are pending:
# - do we need to use the custom script to exclude builds of pull requests?
#     see: https://raw.githubusercontent.com/daksheshvyas/MyHelloWorld/master/scan_script.sh
# - how to run "make check" after the Coverity scan to ensure builds are faster?
# - how to ensure the Coverity scan only runs with the GCC builds and not
#   the clang builds (to avoid duplication) - we must do clang builds to
#   ensure code compiles for different compilers
# Ideas:
# - run the scans on a branch only
# - customize the scan_script.sh example from https://github.com/daksheshvyas/MyHelloWorld
# - try and revert to the old method of running Coverity scans
#addons:
#  coverity_scan:
#    project:
#      name: "resiprocate/resiprocate"
#      description: "reSIProcate SIP stack"
#    notification_email: resiprocate-devel@resiprocate.org
#    build_command_prepend: ./build/travis/bootstrap && ./build/travis/configure
#    build_command: ./build/travis/build
#    branch_pattern: master
