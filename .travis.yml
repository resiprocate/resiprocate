language: cpp
dist: bionic
env:
  global:
   # The next declaration is the encrypted COVERITY_SCAN_TOKEN, created
   #   via the "travis encrypt" command using the project repo's public key
   - secure: "MxxolEXPuFJ38hk7lhGqunKwsc8CIMUy8vCoswNDyFvuBm5FEcEaNe/SIjqli8fCXTrWh3LoCIyulezCoFkysjfSSmLFCngoAEvIWTX1hS9rnh+z1g7vUJiIcj1jiYFV+wk5C44IuMDfOEX6FFh4vRiT/IkZsrXf5IbxD08vUW8="
before_install:
 - sudo add-apt-repository -y "deb http://archive.ubuntu.com/ubuntu/ bionic main universe"
 - sudo apt-get update -qq
 - sudo apt-get install -qq gperf libboost-all-dev libc-ares-dev libdb++-dev libpopt-dev libssl-dev perl libmysqlclient-dev libpq-dev libcppunit-dev autotools-dev libpcre3-dev libxerces-c-dev curl libcajun-dev libsrtp-dev libgloox-dev libtelepathy-qt5-dev libsnmp-dev
 - sudo apt-get install -qq --force-yes autoconf-archive
 - sudo apt-get install -qq debian-archive-keyring
 - wget -q -O - https://ftp-master.debian.org/keys/release-10.asc | sudo apt-key add -
 - wget -q -O - https://ftp-master.debian.org/keys/archive-key-10.asc | sudo apt-key add -
 - sudo add-apt-repository -y "deb http://http.us.debian.org/debian/ buster main"
 - sudo add-apt-repository -y "deb http://http.us.debian.org/debian/ buster-backports main"
 - curl -O http://apt.debify.org/debify/pool/main/d/debify-archive-keyring/debify-archive-keyring_2019.01_all.deb
 - sudo dpkg -i debify-archive-keyring_2019.01_all.deb
 - sudo add-apt-repository -y "deb http://apt.debify.org/debify debify-buster-backports main"
 - sudo apt-get update -qq
 - sudo apt-get install -qq --force-yes -t buster libradcli-dev libsoci-dev libqpid-proton-cpp12-dev libasio-dev python3-dev python3-cxx-dev
 - sudo apt-get install -qq --force-yes -t debify-buster-backports libsipxtapi-dev
compiler:
  - gcc
  - clang
script:
  - ./build/travis/bootstrap
  - ./build/travis/configure
  - ./build/travis/build

# This is not enabled yet, the following issues are pending:
# - do we need to use the custom script to exclude builds of pull requests?
#     see: https://raw.githubusercontent.com/daksheshvyas/MyHelloWorld/master/scan_script.sh
# - how to run "make check" after the Coverity scan to ensure builds are faster?
# - how to ensure the Coverity scan only runs with the GCC builds and not
#   the clang builds (to avoid duplication) - we must do clang builds to
#   ensure code compiles for different compilers
# Ideas:
# - run the scans on a branch only
# - customize the scan_script.sh example from https://github.com/daksheshvyas/MyHelloWorld
# - try and revert to the old method of running Coverity scans
#addons:
#  coverity_scan:
#    project:
#      name: "resiprocate/resiprocate"
#      description: "reSIProcate SIP stack"
#    notification_email: resiprocate-devel@resiprocate.org
#    build_command_prepend: ./build/travis/bootstrap && ./build/travis/configure
#    build_command: ./build/travis/build
#    branch_pattern: master
