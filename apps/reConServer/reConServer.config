########################################################
# reConServer configuration file
########################################################

########################################################
# Logging settings
########################################################

# Logging Type: syslog|cerr|cout|file
LoggingType = file

# Logging level: NONE|CRIT|ERR|WARNING|INFO|DEBUG|STACK
LoggingLevel = WARNING

# Log Filename
LogFilename = /var/log/reConServer/reConServer.log

# Log file Max Size
LogFileMaxLines = 0

# The B2BUA CDR log filename
CDRLogFile = /var/log/reConServer/cdr.csv

# Specify the HOMER SIP capture server hostname
# If CaptureHost is commented/not defined, there is no default value and
# reConServer doesn't attempt to send any HEP packets.
#CaptureHost = localhost

# Specify the HOMER SIP capture server UDP port
# If not defined, the default value, 9060, is used
#CapturePort = 9060

# Specify the HOMER Capture Agent ID
# The default value is 2002
CaptureAgentID = 2002

########################################################
# Transport settings
########################################################


# Local IP Address to bind SIP transports to.
# In general the IP address to bind to is queried from the host OS.This switch allows specification
# of the IP address for OS's that cannot be queried, or for machines that have mulitple NICs.
#IPAddress = 192.168.1.106
#IPAddress = 2001:5c0:1000:a::6d
IPAddress =

# Local port number to use for SIP messaging over TCP - 0 to disable
TCPPort = 5062

# Local port number to use for SIP messaging over UDP - 0 to disable
UDPPort = 5062

# Local port number to use for TLS SIP messaging - 0 to disable
# By default, reConServer will listen for TLS connections on port 5063, use this switch to specify
# something different.  Note SIP certificiates must be present in executable directory for windows
# hosts and ~/.sipCerts directory on linux hosts.
TLSPort = 0

# Alternate and more flexible method to specify transports to bind to.  If specified here
# then IPAddress, and port settings above are ignored.
# Possible settings are:
# Transport<Num>Interface = <IPAddress>:<Port> - Note:  For IPv6 addresses last colon separates
#                                                IP Address and Port - square bracket notation
#                                                is not used.
# Transport<Num>Type = <'TCP'|'UDP'|'TLS'|'DTLS'|'WS'|'WSS'> - default is UDP if missing
# Transport<Num>TlsDomain = <TLSDomain> - only required if transport is TLS, DTLS or WSS
# Transport<Num>TlsCertificate = <TLSCertificate> - only for TLS, DTLS or WSS
# Transport<Num>TlsPrivateKey = <TLSPrivateKey> - only for TLS, DTLS or WSS
# Transport<Num>TlsPrivatePassPhrase = <TLSPrivateKeyPassPhrase> - only for TLS, DTLS or WSS
#                                                                  when private key has passwd
# Transport<Num>TlsClientVerification = <'None'|'Optional'|'Mandatory'> - default is None
# Transport<Num>TlsConnectionMethod = <'TLSv1'|'SSLv23'> - default is SSLv23
#
# Transport<Num>RcvBufLen = <SocketReceiveBufferSize> - currently only applies to UDP transports,
#                                                       leave empty to use OS default
# Example:
# Transport1Interface = 192.168.1.106:5060
# Transport1Type = TCP
#
# Transport2Interface = 192.168.1.106:5060
# Transport2Type = UDP
# Transport2RcvBufLen = 10000
#
# Transport3Interface = 192.168.1.106:5061
# Transport3Type = TLS
# Transport3TlsDomain = sipdomain.com
# Transport3TlsCertificate = /etc/ssl/crt/sipdomain.com.crt
# Transport3TlsPrivateKey = /etc/ssl/private/sipdomain.com.key
# Transport3TlsPrivateKeyPassPhrase = password
# Transport3TlsClientVerification = Mandatory
#
# Transport4Interface = 2666:f0d0:1008:88::4:5060
# Transport4Type = UDP

# Transport5Interface = 192.168.1.106:5062
# Transport5Type = WS

# Transport6Interface = 192.168.1.106:5063
# Transport6Type = WSS
# Transport6TlsDomain = sipdomain.com
# Transport6TlsClientVerification = None


# Local port number to start allocating from for RTP media
MediaPortStart = 17384


# URI of a proxy server to use a SIP outbound proxy.
# By default reConServer does not use an outbound proxy.  Use this switch to route all
# outbound, out-of-dialog requests through a fixed proxy despite the destination URI.
OutboundProxyUri =

# By default, no secure media is offered in outbound SIP requests.  Use this option to
# change that behaviour.  Note:  Inbound secure media is always accepted.
# None     - do not include any secure media in offer
# Srtp     - use SRTP with keying outside of media stream (SDES key negotiation)
#            via SDP.  RTP/AVP profile is used, and transport capability of RTP/SAVP is
#            listed, in order to implement best-effort SRTP.  Note:  The crypo attribute
#            is provided outside of the SDP capability, as this is required by SNOM for
#            optional SRTP offers.
# SrtpReq  - use SRTP with keying outside of media stream (SDES key negotiation)
#            via SDP.  RTP/SAVP profile is used to indicate that SRTP is mandatory.
# SrtpDtls - use SRTP with DTLS key negotiation.  RTP/AVP is use as a default, and a
#            transport capability of UDP/TLS/RTP/SAVP is listed, in order to impelement
#            best-effort DTLS-SRTP.
# SrtpDtlsReq - use SRTP with DTLS key negotiation.  UDP/TLS/RTP/SAVP profile is used to
#            indicate that Dtls-Srtp use is mandatory.
#SecureMediaMode =

# By default, no NAT traversal strategies are used.  Use this switch to specify one:
# None - do not use any NAT traversal strategy (this is the default)
# Bind - use Binding discovery on a STUN server, to discover and use "public" address
#        and port in SDP negotiations
# UdpAlloc - Use a TURN server as a media relay.  Communicate to the TURN
#            server over UDP and Allocate a UDP relay address and port to
#            use in SDP negotiations
# TcpAlloc - Use a TURN server as a media relay.  Communicate to the TURN
#            server over TCP and Allocate a UDP relay address and port to
#            use in SDP negotiations
# TlsAlloc - Use a TURN server as a media relay.  Communicate to the TURN
#            server over TLS and Allocate a UDP relay address and port to
#NatTraversalMode =

# If the peer's SDP contains an RFC 1918 private IP address and the peer
# sends to us from a different IP/port, it is usually a sign that the peer
# is behind NAT and we should send to the IP/port they are sending from
# and ignore the IP/port in their SDP.  Comedia mode enables this behavior,
# it is essential for users behind NAT who don't fully support STUN or TURN.
ForceCOMedia = true

# Hostname of the NAT STUN/TURN server. If NatTraversalMode is used then you MUST specify the
# STUN/TURN server name/address.
NatTraversalServerHostname =

# Port of the NAT STUN/TURN server. If NatTraversalMode is used then you MUST specify the STUN/TURN
# server port.
# Default for UDP and TCP is 3478 and for TURN over TLS it is 5349
NatTraversalServerPort = 3478

# Add rport to the Via header we insert in requests
# This is enabled by default but in some situations, such as working around
# bug #137, it may be desirable to disable it.
AddViaRport = true

# Maximum number of frames that can be buffered in the RTP receive FIFO
MaxReceiveFifoSize = 1000

########################################################
# Authentication settings
########################################################

# STUN/TURN username to use for NAT server. Use this option if the STUN/TURN server requires
# authentication.
StunUsername =

# STUN/TURN password to use for NAT server. Use this option if the STUN/TURN server requires
# authentication.
StunPassword =

########################################################
# UNIX related settings
########################################################

# Must be true or false, default = false, not supported on Windows
Daemonize = false

# On UNIX it is normal to create a PID file
# if unspecified, no attempt will be made to create a PID file
#PidFile = /var/run/reConServer/reConServer.pid

# UNIX account information to run process as
#RunAsUser = recon
#RunAsGroup = recon

########################################################
# Misc settings
########################################################

# Value of server and user agent headers for local UAS
#
# Default value is "reConServer PACKAGE_VERSION" if PACKAGE_VERSION is defined
# during compilation and "reConServer" otherwise
#
#ServerText = reConServer

# This option is used to specify the SIP URI for this instance of reConServer.  reConServer uses
# this setting (-ip is not specified) in order to find the regisration server.  If
# nothing is specified, then the default of sip:noreg@<ipaddress> will be used.
SIPUri =

# SIP password of this SIP user
# Use this switch in cases where the proxy digest challenges sip messaging.
Password =

# Comma separated list of DNS servers, overrides default OS detected list (leave blank
# for default)
DNSServers =

# Domain name to use for TLS server connections.
# By default, reConServer will query the OS for a local hostname for TLS, use this switch
# to override the OS queried result.
TLSDomain =

# Whether we accept the subjectAltName email address as if it was a SIP
# address (when checking the validity of a client certificate)
# Very few commercial CAs offer support for SIP addresses in subjectAltName
# For many purposes, an email address subjectAltName may be considered
# equivalent within a specific domain.
# Currently, this accepts such certs globally (for any incoming connection),
# not just for connections from the local users.
TLSUseEmailAsSIP = false

# Path to load certificates from (optional, there is no default)
# Note that reConServer loads ALL root certificates found by any of the settings
#
#    CADirectory
#    CAFile
#    CertificatePath
#
# Setting one option does not disable the other options.
#
# Path to load root certificates from
# Iff this directory is specified, all files in the directory
# will be loaded as root certificates, prefixes and suffixes are
# not considered
# Note that reConServer loads ALL root certificates found by the settings
# CertificatePath, CADirectory and CAFile.  Setting one option does
# not disable the other options.
# On Debian, the typical location is /etc/ssl/certs
# On Red Hat/CentOS, there isn't a directory like this.
#CADirectory = /etc/ssl/certs

# Specify a single file containing one or more root certificates
# and possible chain/intermediate certificates to be loaded
# Iff this filename is specified, the certificates in the file will
# be loaded as root certificates
#
# This option is typically used to load a bundle of certificates
# such as /etc/ssl/certs/ca-certificates.crt on Debian and
# /etc/pki/tls/cert.pem on Red Hat/CentOS
#
# Note that reConServer loads ALL root certificates found by the settings
# CertificatePath, CADirectory and CAFile.  Setting one option does
# not disable the other options.
#
# Uncomment for Debian/Ubuntu:
#CAFile = /etc/ssl/certs/ca-certificates.crt
# Uncomment for Fedora, Red Hat, CentOS:
#CAFile = /etc/pki/tls/cert.pem

# Certificates in this location have to match one of the filename
# patterns expected by the legacy reSIProcate SSL code:
#
#   domain_cert_NAME.pem, root_cert_NAME.pem, ...
#
# For domain certificates, it is recommended to use the options
# for individual transports, such as TransportXTlsCertificate and
# TransportXTlsPrivateKey and not set CertificatePath at all.
#
CertificatePath =

# Set this to disable registration with SIP Proxy.
# By default, if a SIP uri is specified, reConServer will attempt to register with it
DisableRegistration = false

# Enabling autoanswer will cause reConServer to automatically answer any inbound SIP calls
# and place them in the lowest numbered conversation currently created.
EnableAutoAnswer = true

# Set this to disable sending of keepalives.
# By default, reConServer will enable UDP CRLF keepalives every 30 seconds and TCP keepalives
# every 180 seconds.  Use this switch to disable CRLF keepalives.
DisableKeepAlives = false

# Local audio support - enables requirement for local audio hardware.
# Note:  if local audio support is disabled, then local participants cannot be created.
EnableLocalAudio = false

# Keyboard control from stdin
# Only permitted when run in the foreground (not as a daemon process)
KeyboardInput = true

# Whether to use a global media interface (bridge) for all conferences/conversations or
# a distinct media interface instance for each conference/conversation
# The global approach allows participants to be engaged in more than one concurrent
# conversation but it also limits the total number of participants in the system
# at one time.
# For servers hosting multiple conferences, the global media interface is usually
# not desirable so it is disabled by default
GlobalMediaInterface = false

# The default and maximum sample rate to use when creating flow graphs
# in sipXtapi.
# For cases where narrowband audio is used (G.711a or G.711u),
# the default value, 8000hz, is appropriate.
# For users wanting HD audio (for example, with the G.722 or Opus codecs),
# it is highly desirable to set these to the value associated with
# the codec, for example:
#
#   G.722:    16000
#   Opus:     48000
#
# If the internal sample rate (specified here) is not consistent with
# the sample rate used by the participants the sipXtapi media stack
# will convert the sample rate of the signals on the fly but this has an
# impact on CPU load.
# For sipXtapi resampling to work, sipXtapi must be linked against libspeexdsp
# (even if not using speex).
DefaultSampleRate = 8000
MaximumSampleRate = 8000

# Enable the G.722 codec
# G.722 is a high-definition (HD) voice codec supported by many
# desk phones and softphones.  It uses the same amount of bandwidth
# as G.711 while increasing the audio spectrum from 3khz to about 7khz.
# To use it, it is usually desirable to set the sample rate to 16000
# instead of the default 8000
# It is disabled by default.
#EnableG722 = true

# Enable the Opus codec
# Opus is a variable bit-rate voice codec supported by many
# modern softphones and WebRTC browsers.
# To use it, it is highly desirable to set the sample rate to 48000
# instead of the default 8000
# It is disabled by default.
#EnableOpus = true

# Specify the application to run
# The default value is "None" - in this mode, the creation and manipulation
# of conversations/conferences is done manually using the console
# or if auto answer is enabled, all callers simply end up in a single bridge.
# One additional application is provided:
# B2BUA:   with this application, every incoming SIP call automatically
#          creates a new conversation and a new outgoing call (B-leg).
#          The incoming call will receive answer and alerting signals
#          as they are received from the B-leg.  DTMF tones
#          are relayed from either leg to the other.
#Application = B2BUA

# Specify where the B2BUA should route calls
# If B2BUA mode is enabled, the B2BUA will create the B-leg of the call
# using the Request URI, From and To headers of the A-leg and a Route
# header for the next hop specified here.  The next hop URI should include
# the "sip:" prefix and the ";lr" parameter to specify loose routing.
#B2BUANextHop = sip:sip-host.example.org;transport=tcp;lr

# Specify headers that will be copied to the outgoing INVITE
# A comma-separated list of extension headers that will be copied
# from the incoming INVITE to the outgoing INVITE
#B2BUAReplicateHeaders = X-Customer-ID, X-Ticket-Number

# Specify IP addresses of hosts in the internal zone for the B2BUA
#B2BUAInternalHosts = 192.168.1.100, 192.168.1.101

# Specify TLS names (in certificates) of hosts in the internal zone for B2BUA
#B2BUAInternalTLSNames = sip.example.org

# Specify whether all hosts connecting to us directly (not through NAT)
# with private IP addresses (RFC 1918 and RFC 4193) should be considered as
# part of the internal zone
#B2BUAInternalAllPrivate = false

# Specify the local address to use for media on the internal zone
# If not specified, will try to use the default address for the external zone
#B2BUAInternalMediaAddress = 10.0.1.1

# Specify the secure media mode for B2BUA-initiated connections in
# the internal zone.  Accepts the same values as SecureMediaMode above.
# Default value is the setting chosen for SecureMediaMode.
#B2BUAInternalSecureMediaMode =

# Specify the maximum expiry time for REGISTER requests forwarded
# to the internal registrar.  If the Expires header value exceeds
# this limit, it will be reduced to the limit.
# Default value is 60
#B2BUARegistrationForwardMaxExpiry = 60

# Specify the URI to place in the Path header for REGISTER requests
# forwarded to the internal registrar.
#B2BUARegistrationForwardPath = sip:sip-sbc.example.org;transport=tcp;lr

# Specify the URI of the proxy where REGISTER requests should be
# forwarded.
# If not set, defaults to the value specified in B2BUANextHop
#B2BUARegistrationForwardRoute = sip:reg-server.example.org:15060;transport=tcp;lr

# Some phones send a SUBSCRIBE without an Event header.  If this
# flag is set, the following header will be added:   Event: presence
#B2BUASubscriptionMissingEventHack = false

# Some presence servers (for example, old versions of Asterisk) do not
# correctly set the Route headers when sending a NOTIFY.  In these cases,
# if there is a separate registration proxy, it will be able to add the
# missing Route headers.  To ensure the presence server sends the NOTIFY
# to the registration proxy, set this flag to true.
#B2BUASubscriptionOverrideContactWithAor = false

# Specify the maximum expiry time for SUBSCRIBE requests forwarded
# to the internal presence server.  If the Expires header value exceeds
# this limit, it will be reduced to the limit.
# Default value is 300
#B2BUASubscriptionForwardMaxExpiry = 300

# Specify the name of a file containing From addresses of users and the
# passwords they use to authenticate to hosts in the internal zone.
# If hosts in the internal zone are configured to trust requests from the
# B2BUA's IP or domain then requests won't be challenged and this file
# is not required.
# If this is not set, the database will be used instead (see below)
#B2BUAUsersFilename = b2busers.txt

# The number of worker threads used to asynchronously retrieve user authentication information
# from the database store.
DatabaseConnectionPoolSize = 4

# Supported types:
#
#     MySQL             a MySQL database
#     PostgreSQL        a PostgreSQL database
#
#DatabaseType = PostgreSQL

# The hostname running SQL server to connect to.
# The value of host may be either a host name or an IP address. If host is "localhost",
# a connection to the local host is assumed. For Windows, the client connects using a
# shared-memory connection, if the server has shared-memory connections enabled. Otherwise,
# TCP/IP is used. For Unix, the client connects using a Unix socket file. For a host value of
# "." on Windows, the client connects using a named pipe, if the server has named-pipe
# connections enabled. If named-pipe connections are not enabled, an error occurs.
#DatabaseHost = localhost

# The database name on the SQL server that contains the repro tables
#DatabaseName = repro

# The SQL login ID to use when connecting to the SQL server. If user is empty string "",
# the current user is assumed. Under Unix, this is the current login name. Under Windows,
# the current user name must be specified explicitly.
#DatabaseUser = repro

# The password for the SQL login ID specified.
#DatabasePassword = repro

# If port is not 0, the value is used as the port number for the TCP/IP connection. Note that
# the host parameter determines the type of the connection.
#DatabasePort = 3306

# Indicates whether the passwords retreived from the database are already
# hashed (HA1) values.
#DatabaseCredentialsHashed = true

# Query for obtaining the password hash or cleartext password
# Use the placeholders :user and :domain to put these values in the WHERE clause.
#DatabaseQueryUserCredential = SELECT passwordHash FROM `users` WHERE user = :user AND domain = :domain
