# Makefile.in generated by automake 1.14.1 from Makefile.am.
# resip/stack/test/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2013 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



# $Id$


am__is_gnu_make = test -n '$(MAKEFILE_LIST)' && test -n '$(MAKELEVEL)'
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/resiprocate
pkgincludedir = $(includedir)/resiprocate
pkglibdir = $(libdir)/resiprocate
pkglibexecdir = $(libexecdir)/resiprocate
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-unknown-linux-gnu
host_triplet = x86_64-unknown-linux-gnu
TESTS = testAppTimer$(EXEEXT) testApplicationSip$(EXEEXT) \
	testConnectionBase$(EXEEXT) testCorruption$(EXEEXT) \
	testDigestAuthentication$(EXEEXT) testEmbedded$(EXEEXT) \
	testEmptyHeader$(EXEEXT) testExternalLogger$(EXEEXT) \
	testGenericPidfContents$(EXEEXT) testIM$(EXEEXT) \
	testMessageWaiting$(EXEEXT) \
	testMultipartMixedContents$(EXEEXT) \
	testMultipartRelated$(EXEEXT) testParserCategories$(EXEEXT) \
	testPidf$(EXEEXT) testPksc7$(EXEEXT) \
	testPlainContents$(EXEEXT) testRlmi$(EXEEXT) \
	testDtmfPayload$(EXEEXT) testSdp$(EXEEXT) \
	testSelectInterruptor$(EXEEXT) testSipFrag$(EXEEXT) \
	testSipMessage$(EXEEXT) testSipMessageMemory$(EXEEXT) \
	testStack$(EXEEXT) testTcp$(EXEEXT) testTime$(EXEEXT) \
	testTimer$(EXEEXT) testTuple$(EXEEXT) testUri$(EXEEXT) \
	testWsCookieContext$(EXEEXT) $(am__EXEEXT_1)
check_PROGRAMS = UAS$(EXEEXT) testEmptyHfv$(EXEEXT) \
	RFC4475TortureTests$(EXEEXT) limpc$(EXEEXT) \
	test503Generator$(EXEEXT) testAppTimer$(EXEEXT) \
	testApplicationSip$(EXEEXT) testClient$(EXEEXT) \
	testConnectionBase$(EXEEXT) testCorruption$(EXEEXT) \
	testDigestAuthentication$(EXEEXT) testDtlsTransport$(EXEEXT) \
	testDns$(EXEEXT) testEmbedded$(EXEEXT) \
	testEmptyHeader$(EXEEXT) testExternalLogger$(EXEEXT) \
	testGenericPidfContents$(EXEEXT) testIM$(EXEEXT) \
	testLockStep$(EXEEXT) testMessageWaiting$(EXEEXT) \
	testMultipartMixedContents$(EXEEXT) \
	testMultipartRelated$(EXEEXT) testParserCategories$(EXEEXT) \
	testPidf$(EXEEXT) testPksc7$(EXEEXT) \
	testPlainContents$(EXEEXT) testResponses$(EXEEXT) \
	testRlmi$(EXEEXT) testDtmfPayload$(EXEEXT) testSdp$(EXEEXT) \
	testSelect$(EXEEXT) testSelectInterruptor$(EXEEXT) \
	testServer$(EXEEXT) testSipFrag$(EXEEXT) \
	testSipMessage$(EXEEXT) testSipMessageEncode$(EXEEXT) \
	testSipMessageMemory$(EXEEXT) testSipStack1$(EXEEXT) \
	testSipStackNetNs$(EXEEXT) testStack$(EXEEXT) testTcp$(EXEEXT) \
	testTime$(EXEEXT) testTimer$(EXEEXT) \
	testTransactionFSM$(EXEEXT) testTuple$(EXEEXT) \
	testTypedef$(EXEEXT) testUdp$(EXEEXT) testUri$(EXEEXT) \
	testWsCookieContext$(EXEEXT) $(am__EXEEXT_1)
am__append_1 = testSocketFunc \
	testSecurity

am__append_2 = testSocketFunc \
	testSecurity

subdir = resip/stack/test
DIST_COMMON = $(srcdir)/Makefile.in $(srcdir)/Makefile.am \
	$(top_srcdir)/build-aux/depcomp $(noinst_HEADERS) \
	$(top_srcdir)/build-aux/test-driver
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/ax_have_epoll.m4 \
	$(top_srcdir)/m4/libtool.m4 $(top_srcdir)/m4/ltoptions.m4 \
	$(top_srcdir)/m4/ltsugar.m4 $(top_srcdir)/m4/ltversion.m4 \
	$(top_srcdir)/m4/lt~obsolete.m4 $(top_srcdir)/acinclude.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__EXEEXT_1 = testSocketFunc$(EXEEXT) \
	testSecurity$(EXEEXT)
am_RFC4475TortureTests_OBJECTS = RFC4475TortureTests.$(OBJEXT)
RFC4475TortureTests_OBJECTS = $(am_RFC4475TortureTests_OBJECTS)
RFC4475TortureTests_LDADD = $(LDADD)
am__DEPENDENCIES_1 =
RFC4475TortureTests_DEPENDENCIES = ../libresip.la \
	../../../rutil/librutil.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
am__v_lt_1 = 
am_UAS_OBJECTS = UAS.$(OBJEXT)
UAS_OBJECTS = $(am_UAS_OBJECTS)
UAS_LDADD = $(LDADD)
UAS_DEPENDENCIES = ../libresip.la ../../../rutil/librutil.la \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am_limpc_OBJECTS = limpc.$(OBJEXT)
limpc_OBJECTS = $(am_limpc_OBJECTS)
limpc_LDADD = $(LDADD)
limpc_DEPENDENCIES = ../libresip.la ../../../rutil/librutil.la \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am_test503Generator_OBJECTS = test503Generator.$(OBJEXT)
test503Generator_OBJECTS = $(am_test503Generator_OBJECTS)
test503Generator_LDADD = $(LDADD)
test503Generator_DEPENDENCIES = ../libresip.la \
	../../../rutil/librutil.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_testAppTimer_OBJECTS = testAppTimer.$(OBJEXT)
testAppTimer_OBJECTS = $(am_testAppTimer_OBJECTS)
testAppTimer_LDADD = $(LDADD)
testAppTimer_DEPENDENCIES = ../libresip.la ../../../rutil/librutil.la \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am_testApplicationSip_OBJECTS = testApplicationSip.$(OBJEXT) \
	TestSupport.$(OBJEXT)
testApplicationSip_OBJECTS = $(am_testApplicationSip_OBJECTS)
testApplicationSip_LDADD = $(LDADD)
testApplicationSip_DEPENDENCIES = ../libresip.la \
	../../../rutil/librutil.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_testClient_OBJECTS = testClient.$(OBJEXT)
testClient_OBJECTS = $(am_testClient_OBJECTS)
testClient_LDADD = $(LDADD)
testClient_DEPENDENCIES = ../libresip.la ../../../rutil/librutil.la \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am_testConnectionBase_OBJECTS = testConnectionBase.$(OBJEXT) \
	TestSupport.$(OBJEXT)
testConnectionBase_OBJECTS = $(am_testConnectionBase_OBJECTS)
testConnectionBase_LDADD = $(LDADD)
testConnectionBase_DEPENDENCIES = ../libresip.la \
	../../../rutil/librutil.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_testCorruption_OBJECTS = testCorruption.$(OBJEXT)
testCorruption_OBJECTS = $(am_testCorruption_OBJECTS)
testCorruption_LDADD = $(LDADD)
testCorruption_DEPENDENCIES = ../libresip.la \
	../../../rutil/librutil.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_testDigestAuthentication_OBJECTS =  \
	testDigestAuthentication.$(OBJEXT) TestSupport.$(OBJEXT)
testDigestAuthentication_OBJECTS =  \
	$(am_testDigestAuthentication_OBJECTS)
testDigestAuthentication_LDADD = $(LDADD)
testDigestAuthentication_DEPENDENCIES = ../libresip.la \
	../../../rutil/librutil.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_testDns_OBJECTS = testDns.$(OBJEXT)
testDns_OBJECTS = $(am_testDns_OBJECTS)
testDns_LDADD = $(LDADD)
testDns_DEPENDENCIES = ../libresip.la ../../../rutil/librutil.la \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am_testDtlsTransport_OBJECTS = testDtlsTransport.$(OBJEXT)
testDtlsTransport_OBJECTS = $(am_testDtlsTransport_OBJECTS)
testDtlsTransport_LDADD = $(LDADD)
testDtlsTransport_DEPENDENCIES = ../libresip.la \
	../../../rutil/librutil.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_testDtmfPayload_OBJECTS = testDtmfPayload.$(OBJEXT)
testDtmfPayload_OBJECTS = $(am_testDtmfPayload_OBJECTS)
testDtmfPayload_LDADD = $(LDADD)
testDtmfPayload_DEPENDENCIES = ../libresip.la \
	../../../rutil/librutil.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_testEmbedded_OBJECTS = testEmbedded.$(OBJEXT)
testEmbedded_OBJECTS = $(am_testEmbedded_OBJECTS)
testEmbedded_LDADD = $(LDADD)
testEmbedded_DEPENDENCIES = ../libresip.la ../../../rutil/librutil.la \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am_testEmptyHeader_OBJECTS = testEmptyHeader.$(OBJEXT) \
	TestSupport.$(OBJEXT)
testEmptyHeader_OBJECTS = $(am_testEmptyHeader_OBJECTS)
testEmptyHeader_LDADD = $(LDADD)
testEmptyHeader_DEPENDENCIES = ../libresip.la \
	../../../rutil/librutil.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_testEmptyHfv_OBJECTS = testEmptyHfv.$(OBJEXT)
testEmptyHfv_OBJECTS = $(am_testEmptyHfv_OBJECTS)
testEmptyHfv_LDADD = $(LDADD)
testEmptyHfv_DEPENDENCIES = ../libresip.la ../../../rutil/librutil.la \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am_testExternalLogger_OBJECTS = testExternalLogger.$(OBJEXT)
testExternalLogger_OBJECTS = $(am_testExternalLogger_OBJECTS)
testExternalLogger_LDADD = $(LDADD)
testExternalLogger_DEPENDENCIES = ../libresip.la \
	../../../rutil/librutil.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_testGenericPidfContents_OBJECTS =  \
	testGenericPidfContents.$(OBJEXT) TestSupport.$(OBJEXT)
testGenericPidfContents_OBJECTS =  \
	$(am_testGenericPidfContents_OBJECTS)
testGenericPidfContents_LDADD = $(LDADD)
testGenericPidfContents_DEPENDENCIES = ../libresip.la \
	../../../rutil/librutil.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_testIM_OBJECTS = testIM.$(OBJEXT)
testIM_OBJECTS = $(am_testIM_OBJECTS)
testIM_LDADD = $(LDADD)
testIM_DEPENDENCIES = ../libresip.la ../../../rutil/librutil.la \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am_testLockStep_OBJECTS = testLockStep.$(OBJEXT)
testLockStep_OBJECTS = $(am_testLockStep_OBJECTS)
testLockStep_LDADD = $(LDADD)
testLockStep_DEPENDENCIES = ../libresip.la ../../../rutil/librutil.la \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am_testMessageWaiting_OBJECTS = testMessageWaiting.$(OBJEXT)
testMessageWaiting_OBJECTS = $(am_testMessageWaiting_OBJECTS)
testMessageWaiting_LDADD = $(LDADD)
testMessageWaiting_DEPENDENCIES = ../libresip.la \
	../../../rutil/librutil.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_testMultipartMixedContents_OBJECTS =  \
	testMultipartMixedContents.$(OBJEXT) TestSupport.$(OBJEXT)
testMultipartMixedContents_OBJECTS =  \
	$(am_testMultipartMixedContents_OBJECTS)
testMultipartMixedContents_LDADD = $(LDADD)
testMultipartMixedContents_DEPENDENCIES = ../libresip.la \
	../../../rutil/librutil.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_testMultipartRelated_OBJECTS = testMultipartRelated.$(OBJEXT) \
	TestSupport.$(OBJEXT)
testMultipartRelated_OBJECTS = $(am_testMultipartRelated_OBJECTS)
testMultipartRelated_LDADD = $(LDADD)
testMultipartRelated_DEPENDENCIES = ../libresip.la \
	../../../rutil/librutil.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_testParserCategories_OBJECTS = testParserCategories.$(OBJEXT)
testParserCategories_OBJECTS = $(am_testParserCategories_OBJECTS)
testParserCategories_LDADD = $(LDADD)
testParserCategories_DEPENDENCIES = ../libresip.la \
	../../../rutil/librutil.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_testPidf_OBJECTS = testPidf.$(OBJEXT)
testPidf_OBJECTS = $(am_testPidf_OBJECTS)
testPidf_LDADD = $(LDADD)
testPidf_DEPENDENCIES = ../libresip.la ../../../rutil/librutil.la \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am_testPksc7_OBJECTS = testPksc7.$(OBJEXT) TestSupport.$(OBJEXT)
testPksc7_OBJECTS = $(am_testPksc7_OBJECTS)
testPksc7_LDADD = $(LDADD)
testPksc7_DEPENDENCIES = ../libresip.la ../../../rutil/librutil.la \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am_testPlainContents_OBJECTS = testPlainContents.$(OBJEXT)
testPlainContents_OBJECTS = $(am_testPlainContents_OBJECTS)
testPlainContents_LDADD = $(LDADD)
testPlainContents_DEPENDENCIES = ../libresip.la \
	../../../rutil/librutil.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_testResponses_OBJECTS = testResponses.$(OBJEXT)
testResponses_OBJECTS = $(am_testResponses_OBJECTS)
testResponses_LDADD = $(LDADD)
testResponses_DEPENDENCIES = ../libresip.la ../../../rutil/librutil.la \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am_testRlmi_OBJECTS = testRlmi.$(OBJEXT) TestSupport.$(OBJEXT)
testRlmi_OBJECTS = $(am_testRlmi_OBJECTS)
testRlmi_LDADD = $(LDADD)
testRlmi_DEPENDENCIES = ../libresip.la ../../../rutil/librutil.la \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am_testSdp_OBJECTS = testSdp.$(OBJEXT) TestSupport.$(OBJEXT)
testSdp_OBJECTS = $(am_testSdp_OBJECTS)
testSdp_LDADD = $(LDADD)
testSdp_DEPENDENCIES = ../libresip.la ../../../rutil/librutil.la \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am_testSecurity_OBJECTS = testSecurity.$(OBJEXT)
testSecurity_OBJECTS = $(am_testSecurity_OBJECTS)
testSecurity_LDADD = $(LDADD)
testSecurity_DEPENDENCIES = ../libresip.la ../../../rutil/librutil.la \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am_testSelect_OBJECTS = testSelect.$(OBJEXT)
testSelect_OBJECTS = $(am_testSelect_OBJECTS)
testSelect_LDADD = $(LDADD)
testSelect_DEPENDENCIES = ../libresip.la ../../../rutil/librutil.la \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am_testSelectInterruptor_OBJECTS = testSelectInterruptor.$(OBJEXT)
testSelectInterruptor_OBJECTS = $(am_testSelectInterruptor_OBJECTS)
testSelectInterruptor_LDADD = $(LDADD)
testSelectInterruptor_DEPENDENCIES = ../libresip.la \
	../../../rutil/librutil.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_testServer_OBJECTS = testServer.$(OBJEXT)
testServer_OBJECTS = $(am_testServer_OBJECTS)
testServer_LDADD = $(LDADD)
testServer_DEPENDENCIES = ../libresip.la ../../../rutil/librutil.la \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am_testSipFrag_OBJECTS = testSipFrag.$(OBJEXT) TestSupport.$(OBJEXT)
testSipFrag_OBJECTS = $(am_testSipFrag_OBJECTS)
testSipFrag_LDADD = $(LDADD)
testSipFrag_DEPENDENCIES = ../libresip.la ../../../rutil/librutil.la \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am_testSipMessage_OBJECTS = testSipMessage.$(OBJEXT) \
	TestSupport.$(OBJEXT)
testSipMessage_OBJECTS = $(am_testSipMessage_OBJECTS)
testSipMessage_LDADD = $(LDADD)
testSipMessage_DEPENDENCIES = ../libresip.la \
	../../../rutil/librutil.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_testSipMessageEncode_OBJECTS = testSipMessageEncode.$(OBJEXT)
testSipMessageEncode_OBJECTS = $(am_testSipMessageEncode_OBJECTS)
testSipMessageEncode_LDADD = $(LDADD)
testSipMessageEncode_DEPENDENCIES = ../libresip.la \
	../../../rutil/librutil.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_testSipMessageMemory_OBJECTS = testSipMessageMemory.$(OBJEXT) \
	TestSupport.$(OBJEXT)
testSipMessageMemory_OBJECTS = $(am_testSipMessageMemory_OBJECTS)
testSipMessageMemory_LDADD = $(LDADD)
testSipMessageMemory_DEPENDENCIES = ../libresip.la \
	../../../rutil/librutil.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_testSipStack1_OBJECTS = testSipStack1.$(OBJEXT)
testSipStack1_OBJECTS = $(am_testSipStack1_OBJECTS)
testSipStack1_LDADD = $(LDADD)
testSipStack1_DEPENDENCIES = ../libresip.la ../../../rutil/librutil.la \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am_testSipStackNetNs_OBJECTS = testSipStackNetNs.$(OBJEXT)
testSipStackNetNs_OBJECTS = $(am_testSipStackNetNs_OBJECTS)
testSipStackNetNs_LDADD = $(LDADD)
testSipStackNetNs_DEPENDENCIES = ../libresip.la \
	../../../rutil/librutil.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_testSocketFunc_OBJECTS = testSocketFunc.$(OBJEXT)
testSocketFunc_OBJECTS = $(am_testSocketFunc_OBJECTS)
testSocketFunc_LDADD = $(LDADD)
testSocketFunc_DEPENDENCIES = ../libresip.la \
	../../../rutil/librutil.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_testStack_OBJECTS = testStack.$(OBJEXT)
testStack_OBJECTS = $(am_testStack_OBJECTS)
testStack_LDADD = $(LDADD)
testStack_DEPENDENCIES = ../libresip.la ../../../rutil/librutil.la \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am_testTcp_OBJECTS = testTcp.$(OBJEXT)
testTcp_OBJECTS = $(am_testTcp_OBJECTS)
testTcp_LDADD = $(LDADD)
testTcp_DEPENDENCIES = ../libresip.la ../../../rutil/librutil.la \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am_testTime_OBJECTS = testTime.$(OBJEXT)
testTime_OBJECTS = $(am_testTime_OBJECTS)
testTime_LDADD = $(LDADD)
testTime_DEPENDENCIES = ../libresip.la ../../../rutil/librutil.la \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am_testTimer_OBJECTS = testTimer.$(OBJEXT)
testTimer_OBJECTS = $(am_testTimer_OBJECTS)
testTimer_LDADD = $(LDADD)
testTimer_DEPENDENCIES = ../libresip.la ../../../rutil/librutil.la \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am_testTransactionFSM_OBJECTS = testTransactionFSM.$(OBJEXT) \
	TestSupport.$(OBJEXT)
testTransactionFSM_OBJECTS = $(am_testTransactionFSM_OBJECTS)
testTransactionFSM_LDADD = $(LDADD)
testTransactionFSM_DEPENDENCIES = ../libresip.la \
	../../../rutil/librutil.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_testTuple_OBJECTS = testTuple.$(OBJEXT)
testTuple_OBJECTS = $(am_testTuple_OBJECTS)
testTuple_LDADD = $(LDADD)
testTuple_DEPENDENCIES = ../libresip.la ../../../rutil/librutil.la \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am_testTypedef_OBJECTS = testTypedef.$(OBJEXT)
testTypedef_OBJECTS = $(am_testTypedef_OBJECTS)
testTypedef_LDADD = $(LDADD)
testTypedef_DEPENDENCIES = ../libresip.la ../../../rutil/librutil.la \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am_testUdp_OBJECTS = testUdp.$(OBJEXT)
testUdp_OBJECTS = $(am_testUdp_OBJECTS)
testUdp_LDADD = $(LDADD)
testUdp_DEPENDENCIES = ../libresip.la ../../../rutil/librutil.la \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am_testUri_OBJECTS = testUri.$(OBJEXT) TestSupport.$(OBJEXT)
testUri_OBJECTS = $(am_testUri_OBJECTS)
testUri_LDADD = $(LDADD)
testUri_DEPENDENCIES = ../libresip.la ../../../rutil/librutil.la \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am_testWsCookieContext_OBJECTS = testWsCookieContext.$(OBJEXT)
testWsCookieContext_OBJECTS = $(am_testWsCookieContext_OBJECTS)
testWsCookieContext_LDADD = $(LDADD)
testWsCookieContext_DEPENDENCIES = ../libresip.la \
	../../../rutil/librutil.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
AM_V_P = $(am__v_P_$(V))
am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/build-aux/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_$(V))
am__v_CXX_ = $(am__v_CXX_$(AM_DEFAULT_VERBOSITY))
am__v_CXX_0 = @echo "  CXX     " $@;
am__v_CXX_1 = 
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CXXLD = $(am__v_CXXLD_$(V))
am__v_CXXLD_ = $(am__v_CXXLD_$(AM_DEFAULT_VERBOSITY))
am__v_CXXLD_0 = @echo "  CXXLD   " $@;
am__v_CXXLD_1 = 
SOURCES = $(RFC4475TortureTests_SOURCES) $(UAS_SOURCES) \
	$(limpc_SOURCES) $(test503Generator_SOURCES) \
	$(testAppTimer_SOURCES) $(testApplicationSip_SOURCES) \
	$(testClient_SOURCES) $(testConnectionBase_SOURCES) \
	$(testCorruption_SOURCES) $(testDigestAuthentication_SOURCES) \
	$(testDns_SOURCES) $(testDtlsTransport_SOURCES) \
	$(testDtmfPayload_SOURCES) $(testEmbedded_SOURCES) \
	$(testEmptyHeader_SOURCES) $(testEmptyHfv_SOURCES) \
	$(testExternalLogger_SOURCES) \
	$(testGenericPidfContents_SOURCES) $(testIM_SOURCES) \
	$(testLockStep_SOURCES) $(testMessageWaiting_SOURCES) \
	$(testMultipartMixedContents_SOURCES) \
	$(testMultipartRelated_SOURCES) \
	$(testParserCategories_SOURCES) $(testPidf_SOURCES) \
	$(testPksc7_SOURCES) $(testPlainContents_SOURCES) \
	$(testResponses_SOURCES) $(testRlmi_SOURCES) \
	$(testSdp_SOURCES) $(testSecurity_SOURCES) \
	$(testSelect_SOURCES) $(testSelectInterruptor_SOURCES) \
	$(testServer_SOURCES) $(testSipFrag_SOURCES) \
	$(testSipMessage_SOURCES) $(testSipMessageEncode_SOURCES) \
	$(testSipMessageMemory_SOURCES) $(testSipStack1_SOURCES) \
	$(testSipStackNetNs_SOURCES) $(testSocketFunc_SOURCES) \
	$(testStack_SOURCES) $(testTcp_SOURCES) $(testTime_SOURCES) \
	$(testTimer_SOURCES) $(testTransactionFSM_SOURCES) \
	$(testTuple_SOURCES) $(testTypedef_SOURCES) $(testUdp_SOURCES) \
	$(testUri_SOURCES) $(testWsCookieContext_SOURCES)
DIST_SOURCES = $(RFC4475TortureTests_SOURCES) $(UAS_SOURCES) \
	$(limpc_SOURCES) $(test503Generator_SOURCES) \
	$(testAppTimer_SOURCES) $(testApplicationSip_SOURCES) \
	$(testClient_SOURCES) $(testConnectionBase_SOURCES) \
	$(testCorruption_SOURCES) $(testDigestAuthentication_SOURCES) \
	$(testDns_SOURCES) $(testDtlsTransport_SOURCES) \
	$(testDtmfPayload_SOURCES) $(testEmbedded_SOURCES) \
	$(testEmptyHeader_SOURCES) $(testEmptyHfv_SOURCES) \
	$(testExternalLogger_SOURCES) \
	$(testGenericPidfContents_SOURCES) $(testIM_SOURCES) \
	$(testLockStep_SOURCES) $(testMessageWaiting_SOURCES) \
	$(testMultipartMixedContents_SOURCES) \
	$(testMultipartRelated_SOURCES) \
	$(testParserCategories_SOURCES) $(testPidf_SOURCES) \
	$(testPksc7_SOURCES) $(testPlainContents_SOURCES) \
	$(testResponses_SOURCES) $(testRlmi_SOURCES) \
	$(testSdp_SOURCES) $(testSecurity_SOURCES) \
	$(testSelect_SOURCES) $(testSelectInterruptor_SOURCES) \
	$(testServer_SOURCES) $(testSipFrag_SOURCES) \
	$(testSipMessage_SOURCES) $(testSipMessageEncode_SOURCES) \
	$(testSipMessageMemory_SOURCES) $(testSipStack1_SOURCES) \
	$(testSipStackNetNs_SOURCES) $(testSocketFunc_SOURCES) \
	$(testStack_SOURCES) $(testTcp_SOURCES) $(testTime_SOURCES) \
	$(testTimer_SOURCES) $(testTransactionFSM_SOURCES) \
	$(testTuple_SOURCES) $(testTypedef_SOURCES) $(testUdp_SOURCES) \
	$(testUri_SOURCES) $(testWsCookieContext_SOURCES)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
HEADERS = $(noinst_HEADERS)
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
am__tty_colors_dummy = \
  mgn= red= grn= lgn= blu= brg= std=; \
  am__color_tests=no
am__tty_colors = { \
  $(am__tty_colors_dummy); \
  if test "X$(AM_COLOR_TESTS)" = Xno; then \
    am__color_tests=no; \
  elif test "X$(AM_COLOR_TESTS)" = Xalways; then \
    am__color_tests=yes; \
  elif test "X$$TERM" != Xdumb && { test -t 1; } 2>/dev/null; then \
    am__color_tests=yes; \
  fi; \
  if test $$am__color_tests = yes; then \
    red='[0;31m'; \
    grn='[0;32m'; \
    lgn='[1;32m'; \
    blu='[1;34m'; \
    mgn='[0;35m'; \
    brg='[1m'; \
    std='[m'; \
  fi; \
}
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__recheck_rx = ^[ 	]*:recheck:[ 	]*
am__global_test_result_rx = ^[ 	]*:global-test-result:[ 	]*
am__copy_in_global_log_rx = ^[ 	]*:copy-in-global-log:[ 	]*
# A command that, given a newline-separated list of test names on the
# standard input, print the name of the tests that are to be re-run
# upon "make recheck".
am__list_recheck_tests = $(AWK) '{ \
  recheck = 1; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
        { \
          if ((getline line2 < ($$0 ".log")) < 0) \
	    recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[nN][Oo]/) \
        { \
          recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[yY][eE][sS]/) \
        { \
          break; \
        } \
    }; \
  if (recheck) \
    print $$0; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# A command that, given a newline-separated list of test names on the
# standard input, create the global log from their .trs and .log files.
am__create_global_log = $(AWK) ' \
function fatal(msg) \
{ \
  print "fatal: making $@: " msg | "cat >&2"; \
  exit 1; \
} \
function rst_section(header) \
{ \
  print header; \
  len = length(header); \
  for (i = 1; i <= len; i = i + 1) \
    printf "="; \
  printf "\n\n"; \
} \
{ \
  copy_in_global_log = 1; \
  global_test_result = "RUN"; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
         fatal("failed to read from " $$0 ".trs"); \
      if (line ~ /$(am__global_test_result_rx)/) \
        { \
          sub("$(am__global_test_result_rx)", "", line); \
          sub("[ 	]*$$", "", line); \
          global_test_result = line; \
        } \
      else if (line ~ /$(am__copy_in_global_log_rx)[nN][oO]/) \
        copy_in_global_log = 0; \
    }; \
  if (copy_in_global_log) \
    { \
      rst_section(global_test_result ": " $$0); \
      while ((rc = (getline line < ($$0 ".log"))) != 0) \
      { \
        if (rc < 0) \
          fatal("failed to read from " $$0 ".log"); \
        print line; \
      }; \
      printf "\n"; \
    }; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# Restructured Text title.
am__rst_title = { sed 's/.*/   &   /;h;s/./=/g;p;x;s/ *$$//;p;g' && echo; }
# Solaris 10 'make', and several other traditional 'make' implementations,
# pass "-e" to $(SHELL), and POSIX 2008 even requires this.  Work around it
# by disabling -e (using the XSI extension "set +e") if it's set.
am__sh_e_setup = case $$- in *e*) set +e;; esac
# Default flags passed to test drivers.
am__common_driver_flags = \
  --color-tests "$$am__color_tests" \
  --enable-hard-errors "$$am__enable_hard_errors" \
  --expect-failure "$$am__expect_failure"
# To be inserted before the command running the test.  Creates the
# directory for the log if needed.  Stores in $dir the directory
# containing $f, in $tst the test, in $log the log.  Executes the
# developer- defined test setup AM_TESTS_ENVIRONMENT (if any), and
# passes TESTS_ENVIRONMENT.  Set up options for the wrapper that
# will run the test scripts (or their associated LOG_COMPILER, if
# thy have one).
am__check_pre = \
$(am__sh_e_setup);					\
$(am__vpath_adj_setup) $(am__vpath_adj)			\
$(am__tty_colors);					\
srcdir=$(srcdir); export srcdir;			\
case "$@" in						\
  */*) am__odir=`echo "./$@" | sed 's|/[^/]*$$||'`;;	\
    *) am__odir=.;; 					\
esac;							\
test "x$$am__odir" = x"." || test -d "$$am__odir" 	\
  || $(MKDIR_P) "$$am__odir" || exit $$?;		\
if test -f "./$$f"; then dir=./;			\
elif test -f "$$f"; then dir=;				\
else dir="$(srcdir)/"; fi;				\
tst=$$dir$$f; log='$@'; 				\
if test -n '$(DISABLE_HARD_ERRORS)'; then		\
  am__enable_hard_errors=no; 				\
else							\
  am__enable_hard_errors=yes; 				\
fi; 							\
case " $(XFAIL_TESTS) " in				\
  *[\ \	]$$f[\ \	]* | *[\ \	]$$dir$$f[\ \	]*) \
    am__expect_failure=yes;;				\
  *)							\
    am__expect_failure=no;;				\
esac; 							\
$(AM_TESTS_ENVIRONMENT) $(TESTS_ENVIRONMENT)
# A shell command to get the names of the tests scripts with any registered
# extension removed (i.e., equivalently, the names of the test logs, with
# the '.log' extension removed).  The result is saved in the shell variable
# '$bases'.  This honors runtime overriding of TESTS and TEST_LOGS.  Sadly,
# we cannot use something simpler, involving e.g., "$(TEST_LOGS:.log=)",
# since that might cause problem with VPATH rewrites for suffix-less tests.
# See also 'test-harness-vpath-rewrite.sh' and 'test-trs-basic.sh'.
am__set_TESTS_bases = \
  bases='$(TEST_LOGS)'; \
  bases=`for i in $$bases; do echo $$i; done | sed 's/\.log$$//'`; \
  bases=`echo $$bases`
RECHECK_LOGS = $(TEST_LOGS)
AM_RECURSIVE_TARGETS = check recheck
TEST_SUITE_LOG = test-suite.log
TEST_EXTENSIONS =  .test
LOG_DRIVER = $(SHELL) $(top_srcdir)/build-aux/test-driver
LOG_COMPILE = $(LOG_COMPILER) $(AM_LOG_FLAGS) $(LOG_FLAGS)
am__set_b = \
  case '$@' in \
    */*) \
      case '$*' in \
        */*) b='$*';; \
          *) b=`echo '$@' | sed 's/\.log$$//'`; \
       esac;; \
    *) \
      b='$*';; \
  esac
am__test_logs1 = $(TESTS:=.log)
am__test_logs2 = $(am__test_logs1:.log=.log)
TEST_LOGS = $(am__test_logs2:.test.log=.log)
TEST_LOG_DRIVER = $(SHELL) $(top_srcdir)/build-aux/test-driver
TEST_LOG_COMPILE = $(TEST_LOG_COMPILER) $(AM_TEST_LOG_FLAGS) \
	$(TEST_LOG_FLAGS)
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/balram/projects/finalResip/resiprocate/build-aux/missing aclocal-1.14
AMTAR = $${TAR-tar}
AM_DEFAULT_VERBOSITY = 1
AR = ar
AUTOCONF = ${SHELL} /home/balram/projects/finalResip/resiprocate/build-aux/missing autoconf
AUTOHEADER = ${SHELL} /home/balram/projects/finalResip/resiprocate/build-aux/missing autoheader
AUTOMAKE = ${SHELL} /home/balram/projects/finalResip/resiprocate/build-aux/missing automake-1.14
AWK = gawk
CC = gcc
CCDEPMODE = depmode=none
CFLAGS = -g -O2 -fPIE -fstack-protector --param=ssp-buffer-size=4 -Wformat -Werror=format-security -Wall -Wno-deprecated
CPP = gcc -E
CPPFLAGS = -D_FORTIFY_SOURCE=2 -I/usr/include/telepathy-qt4 -I/usr/include/qt4 -I/usr/include/qt4/QtCore -I/usr/include/qt4/QtNetwork -I/usr/include/qt4/QtDBus -I/usr/include/postgresql -I/usr/include/sipxtapi -I/usr/include/gloox -D__pingtel_on_posix__ -D_linux_ -D_REENTRANT -D_FILE_OFFS -DDEFAULT_BRIDGE_MAX_IN_OUTPUTS=20 -D__STDC_LIMIT_MACROS -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -DRESIP_OSTYPE_LINUX -DRESIP_ARCH_X86_64 -DRESIP_LARCH_ -D_REENTRANT -DRESIP_TOOLCHAIN_GNU
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=none
CXXFLAGS = -g -O2 -fPIE -fstack-protector --param=ssp-buffer-size=4 -Wformat -Werror=format-security -fpermissive -Wall -Wno-deprecated
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DEPS_PYTHON_CFLAGS = -I/usr/include/python2.7 -I/usr/include/x86_64-linux-gnu/python2.7  -fno-strict-aliasing -D_FORTIFY_SOURCE=2 -g -fstack-protector-strong -Wformat -Werror=format-security  -DNDEBUG -g -fwrapv -O2 -Wall -Wstrict-prototypes
DEPS_PYTHON_LIBS = -L/usr/lib/python2.7/config-x86_64-linux-gnu -L/usr/lib -lpython2.7 -lpthread -ldl  -lutil -lm  -Xlinker -export-dynamic -Wl,-O1 -Wl,-Bsymbolic-functions
DLLTOOL = false
DSYMUTIL = 
DUMPBIN = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
FGREP = /bin/grep -F
GPERF = ${SHELL} /home/balram/projects/finalResip/resiprocate/build-aux/missing gperf
GREP = /bin/grep
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LD = /usr/bin/ld -m elf_x86_64
LDFLAGS = -fPIE -pie -Wl,-z,relro -Wl,-z,now -lcares
LIBARES_LIBADD = -lcares
LIBGEOIP_LIBADD = 
LIBLOG_LIBADD = 
LIBMYSQL_LIBADD = -lmysqlclient_r
LIBOBJS = 
LIBPOPT_LIBADD = -lpopt
LIBPOSTGRESQL_LIBADD = -lpq
LIBPTHREAD_LIBADD = -lpthread
LIBRADIUS_LIBADD = -lradcli
LIBS = 
LIBSSL_LIBADD = -lssl -lcrypto
LIBSTL_LIBADD = 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIBTOOL_VERSION_RELEASE = -release 1.10
LIPO = 
LN_S = ln -s
LTLIBOBJS = 
MAINT = #
MAKEINFO = ${SHELL} /home/balram/projects/finalResip/resiprocate/build-aux/missing makeinfo
MANIFEST_TOOL = :
MKDIR_P = /bin/mkdir -p
NM = /usr/bin/nm -B
NMEDIT = 
OBJDUMP = objdump
OBJEXT = o
OTOOL = 
OTOOL64 = 
PACKAGE = resiprocate
PACKAGE_BUGREPORT = 
PACKAGE_NAME = resiprocate
PACKAGE_STRING = resiprocate 1.10.0
PACKAGE_TARNAME = resiprocate
PACKAGE_URL = 
PACKAGE_VERSION = 1.10.0
PATH_SEPARATOR = :
PKG_CONFIG = /usr/bin/pkg-config
PKG_CONFIG_LIBDIR = 
PKG_CONFIG_PATH = 
PYCXX_SRCDIR = /usr/share/python2.7/CXX/Python2
RANLIB = ranlib
SED = /bin/sed
SET_MAKE = 
SHELL = /bin/bash
SO_RELEASE = 1.10
STRIP = strip
VERSION = 1.10.0
abs_builddir = /home/balram/projects/finalResip/resiprocate/resip/stack/test
abs_srcdir = /home/balram/projects/finalResip/resiprocate/resip/stack/test
abs_top_builddir = /home/balram/projects/finalResip/resiprocate
abs_top_srcdir = /home/balram/projects/finalResip/resiprocate
ac_ct_AR = ar
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_DUMPBIN = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
bindir = ${exec_prefix}/bin
build = x86_64-unknown-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = unknown
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = x86_64-unknown-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = unknown
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/balram/projects/finalResip/resiprocate/build-aux/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = $(MKDIR_P)
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
reproplugindir = ${pkglibdir}/repro/plugins
returnpkglibdir = ${pkglibdir}/reTurnServer
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../../../
top_builddir = ../../..
top_srcdir = ../../..
EXTRA_DIST = *.dat dumpasn1.cfg dumpasn1.c host.dns *.sh Mac \
	Makefile-nossl.w32 Makefile.w32 make-nossl_w32.bat \
	make_w32.bat msgHeaderDiagram-4858.dot openldap.srv \
	raw-tests.txt RSP-2 RSP-3 runtests.sh *.vcxproj \
	*.vcxproj.filters *.vcproj test.rc *.py torture-test.txt \
	yahoo.dns testTFSM-clientinvite testTFSM-clientnoninvite \
	testTFSM-serverinvite testTFSM-servernoninvite

#AM_CXXFLAGS = -DUSE_ARES
AM_CXXFLAGS = -I $(top_srcdir)
#LDADD += ../../../contrib/ares/libares.a
LDADD = ../libresip.la ../../../rutil/librutil.la $(LIBSSL_LIBADD) \
	$(LIBPOPT_LIBADD)  -lpthread
UAS_SOURCES = UAS.cxx
testEmptyHfv_SOURCES = testEmptyHfv.cxx
RFC4475TortureTests_SOURCES = RFC4475TortureTests.cxx
limpc_SOURCES = limpc.cxx
test503Generator_SOURCES = test503Generator.cxx
testAppTimer_SOURCES = testAppTimer.cxx
testApplicationSip_SOURCES = testApplicationSip.cxx TestSupport.cxx
testClient_SOURCES = testClient.cxx
testConnectionBase_SOURCES = testConnectionBase.cxx TestSupport.cxx
testCorruption_SOURCES = testCorruption.cxx
testDigestAuthentication_SOURCES = testDigestAuthentication.cxx TestSupport.cxx
testDtlsTransport_SOURCES = testDtlsTransport.cxx
testDtmfPayload_SOURCES = testDtmfPayload.cxx
testDns_SOURCES = testDns.cxx
testEmbedded_SOURCES = testEmbedded.cxx
testEmptyHeader_SOURCES = testEmptyHeader.cxx TestSupport.cxx
testExternalLogger_SOURCES = testExternalLogger.cxx
testGenericPidfContents_SOURCES = testGenericPidfContents.cxx TestSupport.cxx
testIM_SOURCES = testIM.cxx
testLockStep_SOURCES = testLockStep.cxx
testMessageWaiting_SOURCES = testMessageWaiting.cxx
testMultipartMixedContents_SOURCES = testMultipartMixedContents.cxx TestSupport.cxx
testMultipartRelated_SOURCES = testMultipartRelated.cxx TestSupport.cxx
testParserCategories_SOURCES = testParserCategories.cxx
testPidf_SOURCES = testPidf.cxx
testPksc7_SOURCES = testPksc7.cxx TestSupport.cxx
testPlainContents_SOURCES = testPlainContents.cxx
testResponses_SOURCES = testResponses.cxx
testRlmi_SOURCES = testRlmi.cxx TestSupport.cxx
testSdp_SOURCES = testSdp.cxx TestSupport.cxx
testSecurity_SOURCES = testSecurity.cxx
testSelect_SOURCES = testSelect.cxx
testSelectInterruptor_SOURCES = testSelectInterruptor.cxx
testServer_SOURCES = testServer.cxx
testSipFrag_SOURCES = testSipFrag.cxx TestSupport.cxx
testSipMessage_SOURCES = testSipMessage.cxx TestSupport.cxx
testSipMessageEncode_SOURCES = testSipMessageEncode.cxx
testSipMessageMemory_SOURCES = testSipMessageMemory.cxx TestSupport.cxx
testSipStack1_SOURCES = testSipStack1.cxx
testSipStackNetNs_SOURCES = testSipStackNetNs.cxx
testSocketFunc_SOURCES = testSocketFunc.cxx
testStack_SOURCES = testStack.cxx
testTcp_SOURCES = testTcp.cxx
testTime_SOURCES = testTime.cxx
testTimer_SOURCES = testTimer.cxx
testTransactionFSM_SOURCES = testTransactionFSM.cxx TestSupport.cxx
testTuple_SOURCES = testTuple.cxx
testTypedef_SOURCES = testTypedef.cxx
testUdp_SOURCES = testUdp.cxx
testUri_SOURCES = testUri.cxx TestSupport.cxx
testWsCookieContext_SOURCES = testWsCookieContext.cxx
noinst_HEADERS = digcalc.hxx \
	InviteClient.hxx \
	InviteServer.hxx \
	md5.hxx \
	Register.hxx \
	Registrar.hxx \
	Resolver.hxx \
	testIM.hxx \
	TestSupport.hxx \
	Transceiver.hxx \
	tassert.h

all: all-am

.SUFFIXES:
.SUFFIXES: .cxx .lo .log .o .obj .test .test$(EXEEXT) .trs
$(srcdir)/Makefile.in: # $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign resip/stack/test/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign resip/stack/test/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure: # $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4): # $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

clean-checkPROGRAMS:
	@list='$(check_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list

RFC4475TortureTests$(EXEEXT): $(RFC4475TortureTests_OBJECTS) $(RFC4475TortureTests_DEPENDENCIES) $(EXTRA_RFC4475TortureTests_DEPENDENCIES) 
	@rm -f RFC4475TortureTests$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(RFC4475TortureTests_OBJECTS) $(RFC4475TortureTests_LDADD) $(LIBS)

UAS$(EXEEXT): $(UAS_OBJECTS) $(UAS_DEPENDENCIES) $(EXTRA_UAS_DEPENDENCIES) 
	@rm -f UAS$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(UAS_OBJECTS) $(UAS_LDADD) $(LIBS)

limpc$(EXEEXT): $(limpc_OBJECTS) $(limpc_DEPENDENCIES) $(EXTRA_limpc_DEPENDENCIES) 
	@rm -f limpc$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(limpc_OBJECTS) $(limpc_LDADD) $(LIBS)

test503Generator$(EXEEXT): $(test503Generator_OBJECTS) $(test503Generator_DEPENDENCIES) $(EXTRA_test503Generator_DEPENDENCIES) 
	@rm -f test503Generator$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test503Generator_OBJECTS) $(test503Generator_LDADD) $(LIBS)

testAppTimer$(EXEEXT): $(testAppTimer_OBJECTS) $(testAppTimer_DEPENDENCIES) $(EXTRA_testAppTimer_DEPENDENCIES) 
	@rm -f testAppTimer$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(testAppTimer_OBJECTS) $(testAppTimer_LDADD) $(LIBS)

testApplicationSip$(EXEEXT): $(testApplicationSip_OBJECTS) $(testApplicationSip_DEPENDENCIES) $(EXTRA_testApplicationSip_DEPENDENCIES) 
	@rm -f testApplicationSip$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(testApplicationSip_OBJECTS) $(testApplicationSip_LDADD) $(LIBS)

testClient$(EXEEXT): $(testClient_OBJECTS) $(testClient_DEPENDENCIES) $(EXTRA_testClient_DEPENDENCIES) 
	@rm -f testClient$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(testClient_OBJECTS) $(testClient_LDADD) $(LIBS)

testConnectionBase$(EXEEXT): $(testConnectionBase_OBJECTS) $(testConnectionBase_DEPENDENCIES) $(EXTRA_testConnectionBase_DEPENDENCIES) 
	@rm -f testConnectionBase$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(testConnectionBase_OBJECTS) $(testConnectionBase_LDADD) $(LIBS)

testCorruption$(EXEEXT): $(testCorruption_OBJECTS) $(testCorruption_DEPENDENCIES) $(EXTRA_testCorruption_DEPENDENCIES) 
	@rm -f testCorruption$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(testCorruption_OBJECTS) $(testCorruption_LDADD) $(LIBS)

testDigestAuthentication$(EXEEXT): $(testDigestAuthentication_OBJECTS) $(testDigestAuthentication_DEPENDENCIES) $(EXTRA_testDigestAuthentication_DEPENDENCIES) 
	@rm -f testDigestAuthentication$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(testDigestAuthentication_OBJECTS) $(testDigestAuthentication_LDADD) $(LIBS)

testDns$(EXEEXT): $(testDns_OBJECTS) $(testDns_DEPENDENCIES) $(EXTRA_testDns_DEPENDENCIES) 
	@rm -f testDns$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(testDns_OBJECTS) $(testDns_LDADD) $(LIBS)

testDtlsTransport$(EXEEXT): $(testDtlsTransport_OBJECTS) $(testDtlsTransport_DEPENDENCIES) $(EXTRA_testDtlsTransport_DEPENDENCIES) 
	@rm -f testDtlsTransport$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(testDtlsTransport_OBJECTS) $(testDtlsTransport_LDADD) $(LIBS)

testDtmfPayload$(EXEEXT): $(testDtmfPayload_OBJECTS) $(testDtmfPayload_DEPENDENCIES) $(EXTRA_testDtmfPayload_DEPENDENCIES) 
	@rm -f testDtmfPayload$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(testDtmfPayload_OBJECTS) $(testDtmfPayload_LDADD) $(LIBS)

testEmbedded$(EXEEXT): $(testEmbedded_OBJECTS) $(testEmbedded_DEPENDENCIES) $(EXTRA_testEmbedded_DEPENDENCIES) 
	@rm -f testEmbedded$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(testEmbedded_OBJECTS) $(testEmbedded_LDADD) $(LIBS)

testEmptyHeader$(EXEEXT): $(testEmptyHeader_OBJECTS) $(testEmptyHeader_DEPENDENCIES) $(EXTRA_testEmptyHeader_DEPENDENCIES) 
	@rm -f testEmptyHeader$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(testEmptyHeader_OBJECTS) $(testEmptyHeader_LDADD) $(LIBS)

testEmptyHfv$(EXEEXT): $(testEmptyHfv_OBJECTS) $(testEmptyHfv_DEPENDENCIES) $(EXTRA_testEmptyHfv_DEPENDENCIES) 
	@rm -f testEmptyHfv$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(testEmptyHfv_OBJECTS) $(testEmptyHfv_LDADD) $(LIBS)

testExternalLogger$(EXEEXT): $(testExternalLogger_OBJECTS) $(testExternalLogger_DEPENDENCIES) $(EXTRA_testExternalLogger_DEPENDENCIES) 
	@rm -f testExternalLogger$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(testExternalLogger_OBJECTS) $(testExternalLogger_LDADD) $(LIBS)

testGenericPidfContents$(EXEEXT): $(testGenericPidfContents_OBJECTS) $(testGenericPidfContents_DEPENDENCIES) $(EXTRA_testGenericPidfContents_DEPENDENCIES) 
	@rm -f testGenericPidfContents$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(testGenericPidfContents_OBJECTS) $(testGenericPidfContents_LDADD) $(LIBS)

testIM$(EXEEXT): $(testIM_OBJECTS) $(testIM_DEPENDENCIES) $(EXTRA_testIM_DEPENDENCIES) 
	@rm -f testIM$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(testIM_OBJECTS) $(testIM_LDADD) $(LIBS)

testLockStep$(EXEEXT): $(testLockStep_OBJECTS) $(testLockStep_DEPENDENCIES) $(EXTRA_testLockStep_DEPENDENCIES) 
	@rm -f testLockStep$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(testLockStep_OBJECTS) $(testLockStep_LDADD) $(LIBS)

testMessageWaiting$(EXEEXT): $(testMessageWaiting_OBJECTS) $(testMessageWaiting_DEPENDENCIES) $(EXTRA_testMessageWaiting_DEPENDENCIES) 
	@rm -f testMessageWaiting$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(testMessageWaiting_OBJECTS) $(testMessageWaiting_LDADD) $(LIBS)

testMultipartMixedContents$(EXEEXT): $(testMultipartMixedContents_OBJECTS) $(testMultipartMixedContents_DEPENDENCIES) $(EXTRA_testMultipartMixedContents_DEPENDENCIES) 
	@rm -f testMultipartMixedContents$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(testMultipartMixedContents_OBJECTS) $(testMultipartMixedContents_LDADD) $(LIBS)

testMultipartRelated$(EXEEXT): $(testMultipartRelated_OBJECTS) $(testMultipartRelated_DEPENDENCIES) $(EXTRA_testMultipartRelated_DEPENDENCIES) 
	@rm -f testMultipartRelated$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(testMultipartRelated_OBJECTS) $(testMultipartRelated_LDADD) $(LIBS)

testParserCategories$(EXEEXT): $(testParserCategories_OBJECTS) $(testParserCategories_DEPENDENCIES) $(EXTRA_testParserCategories_DEPENDENCIES) 
	@rm -f testParserCategories$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(testParserCategories_OBJECTS) $(testParserCategories_LDADD) $(LIBS)

testPidf$(EXEEXT): $(testPidf_OBJECTS) $(testPidf_DEPENDENCIES) $(EXTRA_testPidf_DEPENDENCIES) 
	@rm -f testPidf$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(testPidf_OBJECTS) $(testPidf_LDADD) $(LIBS)

testPksc7$(EXEEXT): $(testPksc7_OBJECTS) $(testPksc7_DEPENDENCIES) $(EXTRA_testPksc7_DEPENDENCIES) 
	@rm -f testPksc7$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(testPksc7_OBJECTS) $(testPksc7_LDADD) $(LIBS)

testPlainContents$(EXEEXT): $(testPlainContents_OBJECTS) $(testPlainContents_DEPENDENCIES) $(EXTRA_testPlainContents_DEPENDENCIES) 
	@rm -f testPlainContents$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(testPlainContents_OBJECTS) $(testPlainContents_LDADD) $(LIBS)

testResponses$(EXEEXT): $(testResponses_OBJECTS) $(testResponses_DEPENDENCIES) $(EXTRA_testResponses_DEPENDENCIES) 
	@rm -f testResponses$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(testResponses_OBJECTS) $(testResponses_LDADD) $(LIBS)

testRlmi$(EXEEXT): $(testRlmi_OBJECTS) $(testRlmi_DEPENDENCIES) $(EXTRA_testRlmi_DEPENDENCIES) 
	@rm -f testRlmi$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(testRlmi_OBJECTS) $(testRlmi_LDADD) $(LIBS)

testSdp$(EXEEXT): $(testSdp_OBJECTS) $(testSdp_DEPENDENCIES) $(EXTRA_testSdp_DEPENDENCIES) 
	@rm -f testSdp$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(testSdp_OBJECTS) $(testSdp_LDADD) $(LIBS)

testSecurity$(EXEEXT): $(testSecurity_OBJECTS) $(testSecurity_DEPENDENCIES) $(EXTRA_testSecurity_DEPENDENCIES) 
	@rm -f testSecurity$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(testSecurity_OBJECTS) $(testSecurity_LDADD) $(LIBS)

testSelect$(EXEEXT): $(testSelect_OBJECTS) $(testSelect_DEPENDENCIES) $(EXTRA_testSelect_DEPENDENCIES) 
	@rm -f testSelect$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(testSelect_OBJECTS) $(testSelect_LDADD) $(LIBS)

testSelectInterruptor$(EXEEXT): $(testSelectInterruptor_OBJECTS) $(testSelectInterruptor_DEPENDENCIES) $(EXTRA_testSelectInterruptor_DEPENDENCIES) 
	@rm -f testSelectInterruptor$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(testSelectInterruptor_OBJECTS) $(testSelectInterruptor_LDADD) $(LIBS)

testServer$(EXEEXT): $(testServer_OBJECTS) $(testServer_DEPENDENCIES) $(EXTRA_testServer_DEPENDENCIES) 
	@rm -f testServer$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(testServer_OBJECTS) $(testServer_LDADD) $(LIBS)

testSipFrag$(EXEEXT): $(testSipFrag_OBJECTS) $(testSipFrag_DEPENDENCIES) $(EXTRA_testSipFrag_DEPENDENCIES) 
	@rm -f testSipFrag$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(testSipFrag_OBJECTS) $(testSipFrag_LDADD) $(LIBS)

testSipMessage$(EXEEXT): $(testSipMessage_OBJECTS) $(testSipMessage_DEPENDENCIES) $(EXTRA_testSipMessage_DEPENDENCIES) 
	@rm -f testSipMessage$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(testSipMessage_OBJECTS) $(testSipMessage_LDADD) $(LIBS)

testSipMessageEncode$(EXEEXT): $(testSipMessageEncode_OBJECTS) $(testSipMessageEncode_DEPENDENCIES) $(EXTRA_testSipMessageEncode_DEPENDENCIES) 
	@rm -f testSipMessageEncode$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(testSipMessageEncode_OBJECTS) $(testSipMessageEncode_LDADD) $(LIBS)

testSipMessageMemory$(EXEEXT): $(testSipMessageMemory_OBJECTS) $(testSipMessageMemory_DEPENDENCIES) $(EXTRA_testSipMessageMemory_DEPENDENCIES) 
	@rm -f testSipMessageMemory$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(testSipMessageMemory_OBJECTS) $(testSipMessageMemory_LDADD) $(LIBS)

testSipStack1$(EXEEXT): $(testSipStack1_OBJECTS) $(testSipStack1_DEPENDENCIES) $(EXTRA_testSipStack1_DEPENDENCIES) 
	@rm -f testSipStack1$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(testSipStack1_OBJECTS) $(testSipStack1_LDADD) $(LIBS)

testSipStackNetNs$(EXEEXT): $(testSipStackNetNs_OBJECTS) $(testSipStackNetNs_DEPENDENCIES) $(EXTRA_testSipStackNetNs_DEPENDENCIES) 
	@rm -f testSipStackNetNs$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(testSipStackNetNs_OBJECTS) $(testSipStackNetNs_LDADD) $(LIBS)

testSocketFunc$(EXEEXT): $(testSocketFunc_OBJECTS) $(testSocketFunc_DEPENDENCIES) $(EXTRA_testSocketFunc_DEPENDENCIES) 
	@rm -f testSocketFunc$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(testSocketFunc_OBJECTS) $(testSocketFunc_LDADD) $(LIBS)

testStack$(EXEEXT): $(testStack_OBJECTS) $(testStack_DEPENDENCIES) $(EXTRA_testStack_DEPENDENCIES) 
	@rm -f testStack$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(testStack_OBJECTS) $(testStack_LDADD) $(LIBS)

testTcp$(EXEEXT): $(testTcp_OBJECTS) $(testTcp_DEPENDENCIES) $(EXTRA_testTcp_DEPENDENCIES) 
	@rm -f testTcp$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(testTcp_OBJECTS) $(testTcp_LDADD) $(LIBS)

testTime$(EXEEXT): $(testTime_OBJECTS) $(testTime_DEPENDENCIES) $(EXTRA_testTime_DEPENDENCIES) 
	@rm -f testTime$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(testTime_OBJECTS) $(testTime_LDADD) $(LIBS)

testTimer$(EXEEXT): $(testTimer_OBJECTS) $(testTimer_DEPENDENCIES) $(EXTRA_testTimer_DEPENDENCIES) 
	@rm -f testTimer$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(testTimer_OBJECTS) $(testTimer_LDADD) $(LIBS)

testTransactionFSM$(EXEEXT): $(testTransactionFSM_OBJECTS) $(testTransactionFSM_DEPENDENCIES) $(EXTRA_testTransactionFSM_DEPENDENCIES) 
	@rm -f testTransactionFSM$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(testTransactionFSM_OBJECTS) $(testTransactionFSM_LDADD) $(LIBS)

testTuple$(EXEEXT): $(testTuple_OBJECTS) $(testTuple_DEPENDENCIES) $(EXTRA_testTuple_DEPENDENCIES) 
	@rm -f testTuple$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(testTuple_OBJECTS) $(testTuple_LDADD) $(LIBS)

testTypedef$(EXEEXT): $(testTypedef_OBJECTS) $(testTypedef_DEPENDENCIES) $(EXTRA_testTypedef_DEPENDENCIES) 
	@rm -f testTypedef$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(testTypedef_OBJECTS) $(testTypedef_LDADD) $(LIBS)

testUdp$(EXEEXT): $(testUdp_OBJECTS) $(testUdp_DEPENDENCIES) $(EXTRA_testUdp_DEPENDENCIES) 
	@rm -f testUdp$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(testUdp_OBJECTS) $(testUdp_LDADD) $(LIBS)

testUri$(EXEEXT): $(testUri_OBJECTS) $(testUri_DEPENDENCIES) $(EXTRA_testUri_DEPENDENCIES) 
	@rm -f testUri$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(testUri_OBJECTS) $(testUri_LDADD) $(LIBS)

testWsCookieContext$(EXEEXT): $(testWsCookieContext_OBJECTS) $(testWsCookieContext_DEPENDENCIES) $(EXTRA_testWsCookieContext_DEPENDENCIES) 
	@rm -f testWsCookieContext$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(testWsCookieContext_OBJECTS) $(testWsCookieContext_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

#include ./$(DEPDIR)/RFC4475TortureTests.Po
#include ./$(DEPDIR)/TestSupport.Po
#include ./$(DEPDIR)/UAS.Po
#include ./$(DEPDIR)/limpc.Po
#include ./$(DEPDIR)/test503Generator.Po
#include ./$(DEPDIR)/testAppTimer.Po
#include ./$(DEPDIR)/testApplicationSip.Po
#include ./$(DEPDIR)/testClient.Po
#include ./$(DEPDIR)/testConnectionBase.Po
#include ./$(DEPDIR)/testCorruption.Po
#include ./$(DEPDIR)/testDigestAuthentication.Po
#include ./$(DEPDIR)/testDns.Po
#include ./$(DEPDIR)/testDtlsTransport.Po
#include ./$(DEPDIR)/testDtmfPayload.Po
#include ./$(DEPDIR)/testEmbedded.Po
#include ./$(DEPDIR)/testEmptyHeader.Po
#include ./$(DEPDIR)/testEmptyHfv.Po
#include ./$(DEPDIR)/testExternalLogger.Po
#include ./$(DEPDIR)/testGenericPidfContents.Po
#include ./$(DEPDIR)/testIM.Po
#include ./$(DEPDIR)/testLockStep.Po
#include ./$(DEPDIR)/testMessageWaiting.Po
#include ./$(DEPDIR)/testMultipartMixedContents.Po
#include ./$(DEPDIR)/testMultipartRelated.Po
#include ./$(DEPDIR)/testParserCategories.Po
#include ./$(DEPDIR)/testPidf.Po
#include ./$(DEPDIR)/testPksc7.Po
#include ./$(DEPDIR)/testPlainContents.Po
#include ./$(DEPDIR)/testResponses.Po
#include ./$(DEPDIR)/testRlmi.Po
#include ./$(DEPDIR)/testSdp.Po
#include ./$(DEPDIR)/testSecurity.Po
#include ./$(DEPDIR)/testSelect.Po
#include ./$(DEPDIR)/testSelectInterruptor.Po
#include ./$(DEPDIR)/testServer.Po
#include ./$(DEPDIR)/testSipFrag.Po
#include ./$(DEPDIR)/testSipMessage.Po
#include ./$(DEPDIR)/testSipMessageEncode.Po
#include ./$(DEPDIR)/testSipMessageMemory.Po
#include ./$(DEPDIR)/testSipStack1.Po
#include ./$(DEPDIR)/testSipStackNetNs.Po
#include ./$(DEPDIR)/testSocketFunc.Po
#include ./$(DEPDIR)/testStack.Po
#include ./$(DEPDIR)/testTcp.Po
#include ./$(DEPDIR)/testTime.Po
#include ./$(DEPDIR)/testTimer.Po
#include ./$(DEPDIR)/testTransactionFSM.Po
#include ./$(DEPDIR)/testTuple.Po
#include ./$(DEPDIR)/testTypedef.Po
#include ./$(DEPDIR)/testUdp.Po
#include ./$(DEPDIR)/testUri.Po
#include ./$(DEPDIR)/testWsCookieContext.Po

.cxx.o:
#	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
#	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
#	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no 
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 
	$(AM_V_CXX)$(CXXCOMPILE) -c -o $@ $<

.cxx.obj:
#	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
#	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
#	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no 
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 
	$(AM_V_CXX)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cxx.lo:
#	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
#	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
#	$(am__mv) $$depbase.Tpo $$depbase.Plo
#	$(AM_V_CXX)source='$<' object='$@' libtool=yes 
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 
	$(AM_V_CXX)$(LTCXXCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

# Recover from deleted '.trs' file; this should ensure that
# "rm -f foo.log; make foo.trs" re-run 'foo.test', and re-create
# both 'foo.log' and 'foo.trs'.  Break the recipe in two subshells
# to avoid problems with "make -n".
.log.trs:
	rm -f $< $@
	$(MAKE) $(AM_MAKEFLAGS) $<

# Leading 'am--fnord' is there to ensure the list of targets does not
# expand to empty, as could happen e.g. with make check TESTS=''.
am--fnord $(TEST_LOGS) $(TEST_LOGS:.log=.trs): $(am__force_recheck)
am--force-recheck:
	@:

$(TEST_SUITE_LOG): $(TEST_LOGS)
	@$(am__set_TESTS_bases); \
	am__f_ok () { test -f "$$1" && test -r "$$1"; }; \
	redo_bases=`for i in $$bases; do \
	              am__f_ok $$i.trs && am__f_ok $$i.log || echo $$i; \
	            done`; \
	if test -n "$$redo_bases"; then \
	  redo_logs=`for i in $$redo_bases; do echo $$i.log; done`; \
	  redo_results=`for i in $$redo_bases; do echo $$i.trs; done`; \
	  if $(am__make_dryrun); then :; else \
	    rm -f $$redo_logs && rm -f $$redo_results || exit 1; \
	  fi; \
	fi; \
	if test -n "$$am__remaking_logs"; then \
	  echo "fatal: making $(TEST_SUITE_LOG): possible infinite" \
	       "recursion detected" >&2; \
	else \
	  am__remaking_logs=yes $(MAKE) $(AM_MAKEFLAGS) $$redo_logs; \
	fi; \
	if $(am__make_dryrun); then :; else \
	  st=0;  \
	  errmsg="fatal: making $(TEST_SUITE_LOG): failed to create"; \
	  for i in $$redo_bases; do \
	    test -f $$i.trs && test -r $$i.trs \
	      || { echo "$$errmsg $$i.trs" >&2; st=1; }; \
	    test -f $$i.log && test -r $$i.log \
	      || { echo "$$errmsg $$i.log" >&2; st=1; }; \
	  done; \
	  test $$st -eq 0 || exit 1; \
	fi
	@$(am__sh_e_setup); $(am__tty_colors); $(am__set_TESTS_bases); \
	ws='[ 	]'; \
	results=`for b in $$bases; do echo $$b.trs; done`; \
	test -n "$$results" || results=/dev/null; \
	all=`  grep "^$$ws*:test-result:"           $$results | wc -l`; \
	pass=` grep "^$$ws*:test-result:$$ws*PASS"  $$results | wc -l`; \
	fail=` grep "^$$ws*:test-result:$$ws*FAIL"  $$results | wc -l`; \
	skip=` grep "^$$ws*:test-result:$$ws*SKIP"  $$results | wc -l`; \
	xfail=`grep "^$$ws*:test-result:$$ws*XFAIL" $$results | wc -l`; \
	xpass=`grep "^$$ws*:test-result:$$ws*XPASS" $$results | wc -l`; \
	error=`grep "^$$ws*:test-result:$$ws*ERROR" $$results | wc -l`; \
	if test `expr $$fail + $$xpass + $$error` -eq 0; then \
	  success=true; \
	else \
	  success=false; \
	fi; \
	br='==================='; br=$$br$$br$$br$$br; \
	result_count () \
	{ \
	    if test x"$$1" = x"--maybe-color"; then \
	      maybe_colorize=yes; \
	    elif test x"$$1" = x"--no-color"; then \
	      maybe_colorize=no; \
	    else \
	      echo "$@: invalid 'result_count' usage" >&2; exit 4; \
	    fi; \
	    shift; \
	    desc=$$1 count=$$2; \
	    if test $$maybe_colorize = yes && test $$count -gt 0; then \
	      color_start=$$3 color_end=$$std; \
	    else \
	      color_start= color_end=; \
	    fi; \
	    echo "$${color_start}# $$desc $$count$${color_end}"; \
	}; \
	create_testsuite_report () \
	{ \
	  result_count $$1 "TOTAL:" $$all   "$$brg"; \
	  result_count $$1 "PASS: " $$pass  "$$grn"; \
	  result_count $$1 "SKIP: " $$skip  "$$blu"; \
	  result_count $$1 "XFAIL:" $$xfail "$$lgn"; \
	  result_count $$1 "FAIL: " $$fail  "$$red"; \
	  result_count $$1 "XPASS:" $$xpass "$$red"; \
	  result_count $$1 "ERROR:" $$error "$$mgn"; \
	}; \
	{								\
	  echo "$(PACKAGE_STRING): $(subdir)/$(TEST_SUITE_LOG)" |	\
	    $(am__rst_title);						\
	  create_testsuite_report --no-color;				\
	  echo;								\
	  echo ".. contents:: :depth: 2";				\
	  echo;								\
	  for b in $$bases; do echo $$b; done				\
	    | $(am__create_global_log);					\
	} >$(TEST_SUITE_LOG).tmp || exit 1;				\
	mv $(TEST_SUITE_LOG).tmp $(TEST_SUITE_LOG);			\
	if $$success; then						\
	  col="$$grn";							\
	 else								\
	  col="$$red";							\
	  test x"$$VERBOSE" = x || cat $(TEST_SUITE_LOG);		\
	fi;								\
	echo "$${col}$$br$${std}"; 					\
	echo "$${col}Testsuite summary for $(PACKAGE_STRING)$${std}";	\
	echo "$${col}$$br$${std}"; 					\
	create_testsuite_report --maybe-color;				\
	echo "$$col$$br$$std";						\
	if $$success; then :; else					\
	  echo "$${col}See $(subdir)/$(TEST_SUITE_LOG)$${std}";		\
	  if test -n "$(PACKAGE_BUGREPORT)"; then			\
	    echo "$${col}Please report to $(PACKAGE_BUGREPORT)$${std}";	\
	  fi;								\
	  echo "$$col$$br$$std";					\
	fi;								\
	$$success || exit 1

check-TESTS:
	@list='$(RECHECK_LOGS)';           test -z "$$list" || rm -f $$list
	@list='$(RECHECK_LOGS:.log=.trs)'; test -z "$$list" || rm -f $$list
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	trs_list=`for i in $$bases; do echo $$i.trs; done`; \
	log_list=`echo $$log_list`; trs_list=`echo $$trs_list`; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) TEST_LOGS="$$log_list"; \
	exit $$?;
recheck: all $(check_PROGRAMS)
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	bases=`for i in $$bases; do echo $$i; done \
	         | $(am__list_recheck_tests)` || exit 1; \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	log_list=`echo $$log_list`; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) \
	        am__force_recheck=am--force-recheck \
	        TEST_LOGS="$$log_list"; \
	exit $$?
testAppTimer.log: testAppTimer$(EXEEXT)
	@p='testAppTimer$(EXEEXT)'; \
	b='testAppTimer'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
testApplicationSip.log: testApplicationSip$(EXEEXT)
	@p='testApplicationSip$(EXEEXT)'; \
	b='testApplicationSip'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
testConnectionBase.log: testConnectionBase$(EXEEXT)
	@p='testConnectionBase$(EXEEXT)'; \
	b='testConnectionBase'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
testCorruption.log: testCorruption$(EXEEXT)
	@p='testCorruption$(EXEEXT)'; \
	b='testCorruption'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
testDigestAuthentication.log: testDigestAuthentication$(EXEEXT)
	@p='testDigestAuthentication$(EXEEXT)'; \
	b='testDigestAuthentication'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
testEmbedded.log: testEmbedded$(EXEEXT)
	@p='testEmbedded$(EXEEXT)'; \
	b='testEmbedded'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
testEmptyHeader.log: testEmptyHeader$(EXEEXT)
	@p='testEmptyHeader$(EXEEXT)'; \
	b='testEmptyHeader'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
testExternalLogger.log: testExternalLogger$(EXEEXT)
	@p='testExternalLogger$(EXEEXT)'; \
	b='testExternalLogger'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
testGenericPidfContents.log: testGenericPidfContents$(EXEEXT)
	@p='testGenericPidfContents$(EXEEXT)'; \
	b='testGenericPidfContents'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
testIM.log: testIM$(EXEEXT)
	@p='testIM$(EXEEXT)'; \
	b='testIM'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
testMessageWaiting.log: testMessageWaiting$(EXEEXT)
	@p='testMessageWaiting$(EXEEXT)'; \
	b='testMessageWaiting'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
testMultipartMixedContents.log: testMultipartMixedContents$(EXEEXT)
	@p='testMultipartMixedContents$(EXEEXT)'; \
	b='testMultipartMixedContents'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
testMultipartRelated.log: testMultipartRelated$(EXEEXT)
	@p='testMultipartRelated$(EXEEXT)'; \
	b='testMultipartRelated'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
testParserCategories.log: testParserCategories$(EXEEXT)
	@p='testParserCategories$(EXEEXT)'; \
	b='testParserCategories'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
testPidf.log: testPidf$(EXEEXT)
	@p='testPidf$(EXEEXT)'; \
	b='testPidf'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
testPksc7.log: testPksc7$(EXEEXT)
	@p='testPksc7$(EXEEXT)'; \
	b='testPksc7'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
testPlainContents.log: testPlainContents$(EXEEXT)
	@p='testPlainContents$(EXEEXT)'; \
	b='testPlainContents'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
testRlmi.log: testRlmi$(EXEEXT)
	@p='testRlmi$(EXEEXT)'; \
	b='testRlmi'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
testDtmfPayload.log: testDtmfPayload$(EXEEXT)
	@p='testDtmfPayload$(EXEEXT)'; \
	b='testDtmfPayload'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
testSdp.log: testSdp$(EXEEXT)
	@p='testSdp$(EXEEXT)'; \
	b='testSdp'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
testSelectInterruptor.log: testSelectInterruptor$(EXEEXT)
	@p='testSelectInterruptor$(EXEEXT)'; \
	b='testSelectInterruptor'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
testSipFrag.log: testSipFrag$(EXEEXT)
	@p='testSipFrag$(EXEEXT)'; \
	b='testSipFrag'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
testSipMessage.log: testSipMessage$(EXEEXT)
	@p='testSipMessage$(EXEEXT)'; \
	b='testSipMessage'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
testSipMessageMemory.log: testSipMessageMemory$(EXEEXT)
	@p='testSipMessageMemory$(EXEEXT)'; \
	b='testSipMessageMemory'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
testStack.log: testStack$(EXEEXT)
	@p='testStack$(EXEEXT)'; \
	b='testStack'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
testTcp.log: testTcp$(EXEEXT)
	@p='testTcp$(EXEEXT)'; \
	b='testTcp'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
testTime.log: testTime$(EXEEXT)
	@p='testTime$(EXEEXT)'; \
	b='testTime'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
testTimer.log: testTimer$(EXEEXT)
	@p='testTimer$(EXEEXT)'; \
	b='testTimer'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
testTuple.log: testTuple$(EXEEXT)
	@p='testTuple$(EXEEXT)'; \
	b='testTuple'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
testUri.log: testUri$(EXEEXT)
	@p='testUri$(EXEEXT)'; \
	b='testUri'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
testWsCookieContext.log: testWsCookieContext$(EXEEXT)
	@p='testWsCookieContext$(EXEEXT)'; \
	b='testWsCookieContext'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
testSocketFunc.log: testSocketFunc$(EXEEXT)
	@p='testSocketFunc$(EXEEXT)'; \
	b='testSocketFunc'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
testSecurity.log: testSecurity$(EXEEXT)
	@p='testSecurity$(EXEEXT)'; \
	b='testSecurity'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
.test.log:
	@p='$<'; \
	$(am__set_b); \
	$(am__check_pre) $(TEST_LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
#.test$(EXEEXT).log:
#	@p='$<'; \
#	$(am__set_b); \
#	$(am__check_pre) $(TEST_LOG_DRIVER) --test-name "$$f" \
#	--log-file $$b.log --trs-file $$b.trs \
#	$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \
#	"$$tst" $(AM_TESTS_FD_REDIRECT)

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) $(check_PROGRAMS)
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: check-am
all-am: Makefile $(HEADERS)
installdirs:
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:
	-test -z "$(TEST_LOGS)" || rm -f $(TEST_LOGS)
	-test -z "$(TEST_LOGS:.log=.trs)" || rm -f $(TEST_LOGS:.log=.trs)
	-test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-checkPROGRAMS clean-generic clean-libtool \
	mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am:

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am:

.MAKE: check-am install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am check check-TESTS check-am clean \
	clean-checkPROGRAMS clean-generic clean-libtool cscopelist-am \
	ctags ctags-am distclean distclean-compile distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am install-info \
	install-info-am install-man install-pdf install-pdf-am \
	install-ps install-ps-am install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	recheck tags tags-am uninstall uninstall-am


##############################################################################
# 
# The Vovida Software License, Version 1.0 
# Copyright (c) 2000-2007 Vovida Networks, Inc.  All rights reserved.
# 
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in
#    the documentation and/or other materials provided with the
#    distribution.
# 
# 3. The names "VOCAL", "Vovida Open Communication Application Library",
#    and "Vovida Open Communication Application Library (VOCAL)" must
#    not be used to endorse or promote products derived from this
#    software without prior written permission. For written
#    permission, please contact vocal@vovida.org.
# 
# 4. Products derived from this software may not be called "VOCAL", nor
#    may "VOCAL" appear in their name, without prior written
#    permission of Vovida Networks, Inc.
# 
# THIS SOFTWARE IS PROVIDED "AS IS" AND ANY EXPRESSED OR IMPLIED
# WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
# OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, TITLE AND
# NON-INFRINGEMENT ARE DISCLAIMED.  IN NO EVENT SHALL VOVIDA
# NETWORKS, INC. OR ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT DAMAGES
# IN EXCESS OF $1,000, NOR FOR ANY INDIRECT, INCIDENTAL, SPECIAL,
# EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
# PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY
# OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE
# USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH
# DAMAGE.
# 
# ====================================================================
# 
# This software consists of voluntary contributions made by Vovida
# Networks, Inc. and many individuals on behalf of Vovida Networks,
# Inc.  For more information on Vovida Networks, Inc., please see
# <http://www.vovida.org/>.
# 
##############################################################################

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
